apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    co.elastic.logs/module: kibana
    kompose.cmd: kompose convert -f ../docker/docker-compose.yml
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: kibana
  name: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kibana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        co.elastic.logs/module: kibana
        kompose.cmd: kompose convert -f ../docker/docker-compose.yml
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: kibana
    spec:
      containers:
        - env:
            - name: ELASTICSEARCH_HOSTS
              value: https://es01:9200
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: icam-secret
                  key: KIBANA_PASSWORD
            - name: ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES
              value: config/certs/ca/ca.crt
            - name: ELASTICSEARCH_USERNAME
              value: kibana_system
            - name: SERVERNAME
              value: kibana
            - name: SERVER_PUBLICBASEURL
              valueFrom:
                configMapKeyRef:
                  name: icam-config
                  key: KIBANA_URL
            - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
              valueFrom:
                secretKeyRef:
                  name: icam-secret
                  key: ENCRYPTION_KEY
            - name: XPACK_REPORTING_ENCRYPTIONKEY
              valueFrom:
                secretKeyRef:
                  name: icam-secret
                  key: ENCRYPTION_KEY
            - name: XPACK_SECURITY_ENCRYPTIONKEY
              valueFrom:
                secretKeyRef:
                  name: icam-secret
                  key: ENCRYPTION_KEY
          image: docker.elastic.co/kibana/kibana:8.15.0
          livenessProbe:
            httpGet:
              path: /
              port: 5601
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          name: kibana
          ports:
            - containerPort: 5601
              protocol: TCP
          resources:
            limits:
              memory: "1073741824"
          volumeMounts:
            - mountPath: /usr/share/kibana/config/certs
              name: certs
            - mountPath: /usr/share/kibana/data
              name: kibanadata
      restartPolicy: Always
      volumes:
        - name: certs
          persistentVolumeClaim:
            claimName: certs
        - name: kibanadata
          persistentVolumeClaim:
            claimName: kibanadata
